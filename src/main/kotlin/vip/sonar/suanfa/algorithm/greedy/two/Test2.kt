package vip.sonar.suanfa.algorithm.greedy.two

import org.junit.Test

/**
 * 分糖果问题
 *
我们有 m 个糖果和 n 个孩子。我们现在要把糖果分给这些孩子吃，
但是糖果少，孩子多（m<n），所以糖果只能分配给一部分孩子。
每个糖果的大小不等，这 m 个糖果的大小分别是 s1，s2，s3，……，sm。
除此之外，每个孩子对糖果大小的需求也是不一样的，
只有糖果的大小大于等于孩子的对糖果大小的需求的时候，
孩子才得到满足。假设这 n 个孩子对糖果大小的需求分别是 g1，g2，g3，……，gn。
我的问题是，如何分配糖果，能尽可能满足最多数量的孩子？
 */
class Test2 {

    /**
     * 1. 孩子从小到大排序；
     * 2. 糖果从小到排序；
     * 3. 分别取2个队列的对头，进行判断，比较简单，不做了
     */

    @Test
    fun test() {

    }

}