package vip.sonar.suanfa.recursion.two

import org.junit.Test

/**
 * TODO
 * 打印有问题
 */
class RecursionTest {

    /**
     * 有 n 个台阶，每次你可以跨 1 个台阶或者 2 个台阶，请问走这 n 个台阶有多少种走法？
     * 如果有 7 个台阶，你可以 2，2，2，1 这样子上去，
     * 也可以 1，2，1，1，2 这样子上去，总之走法有很多，那如何用编程求得总共有多少种走法呢？
     *
     * 根据第一步的走法，可将所有走法分为2类：
     * 第一类：第一步走了1个台阶；
     * 第二类：第一步走了2个台阶；
     * n个台阶的走法 = (先走1个台阶后的n-1个台阶的走法) + (先走2个台阶后的 n-2 个台阶的走法)
     */
    @Test
    fun test1() {
        // 1 个台阶  1种走法 (1)
        // 2 个台阶，2种走法 (1,1),(2)
        // 3 个台阶, (1,1,1)，(1,2), (2,1)
        // 4 个台阶 (1,1,1,1)，(1,2,1), (2,1,1), (2,2),(1,1,2)

        fun fn(n: Int): Int {
            if (n == 1) return 1
            if (n == 2) return 2
            // 1.递归公式 (先走1个台阶后的n-1个台阶的走法) + (先走2个台阶后的 n-2 个台阶的走法)
            return fn(n - 1) + fn(n - 2)
        }
        println("5个台阶的走法有：${fn(5)}")

        fun f(n: Int, str: String) {
            if (n == 1) {
                println("$str 1")
                return
            }
            if (n == 2) {
                println("$str 1, 1")
                println("$str 2")
                return
            }
            f(n - 2, "2,$str")  // 先走二步
            f(n - 1, "1,$str")  // 先走一步
//            f(n - 2, "")
        }

        f(5, "")
    }

}